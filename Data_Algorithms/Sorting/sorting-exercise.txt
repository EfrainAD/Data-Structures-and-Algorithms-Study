//#1 - Sort 10 schools around your house by distance: 
Insertion sort (Good for small data)

//#2 - eBay sorts listings by the current Bid amount: 
counting or radix sort (Because bid are a nomber in a certin range. (Even the reaches person in the world has a limit.))

//#3 - Sport scores on ESPN: 
Quick sort (not likely to be mostly sorted making it O(n^2), and can be very large data amount.)

//#4 - Massive database (can't fit all into memory) needs to sort through past year's user data: 
Merge sort (More importent to avoid worse case 0(n^2).)

//#5 - Almost sorted Udemy review data needs to update and add 2 new reviews: 
Insertion sort (best chooice for pre order list.)

//#6 - Temperature Records for the past 50 years in Canada:
Radix sort IF the temp only intergers. 
Quick sort IF not.
(radix need be intergers to work well, and temps would also give a range what the numbers can be. It's probably never been 1,000 there in C or F degress.)
(quck sort not use as much space in memory and this is 50 years.)

//#7 - Large user name database needs to be sorted. Data is very random.
Quck sort (if you have a lot of memory, Marge can work too.)

//#8 - You want to teach sorting for the first time? 
Bubble and Selection sort (Nobody actoully uses them.)

Some notes.
Quick Sort:
   Used when average performance matters more than the worse case performance.

Marge Sort 
   Is good when memory (space complexity) is not an issue since you don't need to worry about worse case being O(n^2).

Quick sort VS Marge Sort 
   Marge uses more memory but is 'stable' by not having a worse case to think about. Sort uses less memory but also has a worse case of n^2.

Insertion sort 
   Good for small things, or if the list is mostly sorted. (note: uses very little space. O(n(1))

Counting sort and Radix sort 
   Good for numbers that are integers, that has a restricted range.

JavaScript.sort() 
   Uses different sort method based on the web browser. If it's a sort done by the web browser. Therefor you'll not know what one be used by the user.